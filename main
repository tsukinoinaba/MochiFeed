#!/bin/bash

readonly subscription_file='channels.csv'

# Find canonical ID for a channel
get_canonical_id () {
    if [[ "$1" != @* ]]; then
        echo "Invalid channel tag: ${1}. Channel tag should start with @."
        return 1
    fi

    # Get response from Youtube
    local url="https://www.youtube.com/${1}/videos"
    local response=$(curl -s -i "$url")

    # Check response status
    local status=$(grep 'HTTP/2' <<< "$response")
    status=${status#*'HTTP/2 '}
    status=${status%' '*}
    if [ ! "$status" = 200 ]; then
        echo "Could not find channel for ${1}."
        return 2
    fi

    # Find and strip for canonical ID
    id=$(grep -Po 'rel="canonical" href=".+?"' <<< "$response")
    id=${id#*'href="https://www.youtube.com/channel/'}
    id=${id%'"'}
}

subscribe () {
    if [ ! -f "$subscription_file" ]; then
        touch "$subscription_file"
    fi

    for tag in "$@"; do
        if ! get_canonical_id "$tag"; then
            continue
        fi

        # Check if channel has already been added, and exit if so
        local check=$(grep "$id" "$subscription_file")
        if [ "$check" != "" ]; then
            echo "Already subscribed to ${tag}."
            continue
        fi

        # Append channel tag and RSS feed link to subscription file
        echo "${tag},https://www.youtube.com/feeds/videos.xml?channel_id=${id}," >> "$subscription_file"
        echo "Successfully subscribed to ${tag}!"
    done
}

# TODO switch to yay menu
unsubscribe () {
    if [ ! -f "$subscription_file" ]; then
        echo "No channels subscribed to."
        exit 4
    fi

    for tag in "$@"; do
        # Search for channel tag in subscription file and get line number if found
        local line=$(grep -Fn "$tag" "$subscription_file")
        if [ "$line" = "" ]; then
            echo "Not subscribed to ${tag}."
            continue
        fi
        line="${line%':@'*}"

        # Remove the line containing the channel's data from the subscription file
        local updated_list=$(sed "${line}d" "$subscription_file")
        echo "$updated_list" > "$subscription_file"
        echo "Successfully unsubscribed from ${tag}!"
    done
}

retry_downloads () {
    echo 'To be implemented'
}

list_channels () {
    echo 'To be implemented'
}

list_videos () {
    echo 'To be implemented'
}

print_usage () {
    echo 'To be implemented'
}

error () {
    echo 'To be implemented'
}

case $1 in
    -f) ./sync.sh ;;
    --fetch) ./sync.sh ;;
    -s) subscribe "${@:2}" ;;
    --sub) subscribe "${@:2}" ;;
    -u) unsubscribe "${@:2}" ;;
    --unsub) unsubscribe "${@:2}" ;;
    -r) retry_downloads ;;
    --retry) retry_downloads ;;
    -c) list_channels ;;
    --channels) list_channels ;;
    -l) list_videos ;;
    --latest) list_videos ;;
    -h) print_usage ;;
    --help) print_usage ;;
    *) error ;;
esac

